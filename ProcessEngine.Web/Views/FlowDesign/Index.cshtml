<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>创建流程</title>
    <link href="~/layui/css/layui.css" rel="stylesheet" />
    <link href="~/layui/css/modules/layer/default/layer.css" rel="stylesheet" />
    <link href="~/css/workflow.css" rel="stylesheet" />
    <link href="~/css/main.css" rel="stylesheet" />
    <link href="~/css/common.css" rel="stylesheet" />
</head>
<body>
    <div class="container-header">
        创建流程
    </div>
    <div class="container display-flex" id="app">
        <div>
            <div class="li-btn">
                <ul style="width:146px">
                    <li class="li-tip">流程步骤操作按钮</li>
                    <li><button type="button" v-on:click="editStart" class="layui-btn bnt-start-end">开始<i class="layui-icon layui-icon-upload-circle"></i></button></li>
                    <li><button type="button" class="layui-btn btn-approve">单人处理<i class="layui-icon layui-icon-friends"></i></button></li>
                    <li><button type="button" class="layui-btn btn-approve">多人人处理<i class="layui-icon layui-icon-group"></i></button></li>
                    <li><button type="button" class="layui-btn btn-distribute">分发<i class="layui-icon"></i></button></li>
                    <li><button type="button" class="layui-btn bnt-start-end">结束<i class="layui-icon layui-icon-location"></i></button></li>
                </ul>

            </div>
        </div>
        <div class="list-right">
            <div class="div-title">
                流程步骤
            </div>
            <div class="table-list" style="overflow-y: auto;padding:1px 10px 0 10px">
                <table class="layui-table text-center">
                    <thead>
                        <tr>
                            <th>流程步骤名称</th>
                            <th>前置节点</th>
                            <th>操作类型</th>
                            <th>操作</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-if="dataList && dataList.length == 0">
                            <td colspan="4">暂无数据</td>
                        </tr>
                        <tr v-for="(item, index) in dataList">
                            <td>{{item.number}}</td>
                            <td><input type="text" name="" v-model="item.nodeName" class="table-input"></td>
                            <td><input type="text" name="" v-model="item.nodePath" class="table-input"></td>
                            <td>
                                <input type="checkbox" v-model="item.isRootNode">
                            </td>
                            <td>
                                <a class="layui-btn layui-btn-xs" v-on:click="add(index)">编辑</a>
                                <a class="layui-btn layui-btn-danger layui-btn-xs" v-on:click="remove(item.number,index)">删除</a>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="div-title">
                流程图
            </div>
            <div class="flow-step-box">
                <div class="flow-step">
                    <button type="button" v-on:click="editStart" class="layui-btn bnt-start-end">开始<i class="layui-icon layui-icon-upload-circle"></i></button></li>

                </div>

            </div>
        </div>
    </div>
    <script src="/js/require.js-2.3.6/require.min.js" type="text/javascript"></script>
    <script src="/layui/layui.js" type="text/javascript"></script>
    <script src="../../../js/common/require-config.js" type="text/javascript"></script>
    <script>
        require(['jquery', 'vue'], function ($, Vue) {
            new Vue({
                el: '#app',
                data: {
                    dataList: [],
                    parentNumber: '',
                },
                mounted: function () {
                    var vueDom = this;
                    layui.use(['element', 'layer'], function () {
                        var tree = layui.tree, layer = layui.layer
                    });
                },
                methods: {
                    defaultList: function (loading) {
                        var that = this;
                        $.ajax({
                            type: 'post',
                            dataType: 'json',
                            url: '/api/menu/getList',
                            data: {
                                'isRootNode': true,
                            },
                            success: function (res) {
                                that.dataList = res.data;
                                layer.close(loading);
                            },
                            error: function (res) {
                                layer.close(loading);
                            }
                        });
                    },
                    save: function () {
                        var index = layer.load(2);
                        var that = this;
                        $.ajax({
                            type: 'post',
                            dataType: 'json',
                            url: '/api/menu/add',
                            data: {
                                'parentNumber': that.parentNumber,
                                'menus': JSON.stringify(that.dataList)
                            },
                            success: function (res) {
                                layer.msg(res.message, { icon: 6 });
                                layer.close(index);
                            },
                            error: function (res) {
                                layer.close(index);
                            }
                        });

                    },
                    editStart: function () {
                        layer.open({
                            type: 2,
                            content: 'start',
                            title: '配置开始步骤',
                            area: ['400px', '200px'],
                            offset: ['100px', '150px'],
                            success: function (layero, index) {
                                var body = layer.getChildFrame('body', index);
                                var iframeWin = window[layero.find('iframe')[0]['name']]; //得到iframe页的窗口对象，执行iframe页的方法：iframeWin.method();
                                console.log(body.html()) //得到iframe页的body内容
                                body.find('input').val('Hi，我是从父页来的')
                            }
                        });
                    },
                    remove: function (number, index) {
                        var that = this;
                        that.dataList.splice(index, 1)
                    }
                }
            })
        })
    </script>
</body>
</html>